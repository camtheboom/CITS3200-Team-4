## Introduction to health connect the native companion app for health data in andriod ecosystem
https://youtu.be/d14GVcnbTeo
## Documentation for google health connect from andriod dev blog
https://android-developers.googleblog.com/2022/05/introducing-health-connect.html
# repository provided by google to show how to begin creating an app based on heatlh connect
https://github.com/android/health-samples/tree/main/health-connect/HealthConnectSample
## documentation for andriod studio
https://developer.android.com/studio/intro
## Android Development for Beginners - Full Course
https://www.youtube.com/watch?v=fis26HvvDII


### Js code for implementing map and asking permission still work in progress , left here so y,all can peruse 
import React, { useState } from 'react';
import { View, StyleSheet } from 'react-native';
import MapView from 'react-native-maps';
import { Marker } from 'react-native-maps';
import PermissionsButton from "./Permission";
import useEffect from 'react';
const App = () => {


    const [mapRegion, setmapRegion] = useState({
        latitude: 37.78825,
        longitude: -122.4324,
        latitudeDelta: 0.0922,
        longitudeDelta: 0.0421,
    });

    return (
        <View style={styles.container}>
            <MapView
                style={{ alignSelf: 'stretch', height: '100%' }}
                region={mapRegion}
            >
                <Marker coordinate={mapRegion} title='Marker' />
            </MapView>
        </View>

    );
    //Used to check if permission is granted 
    useEffect(() => {
        (async () => {
            let { status } = await Location.requestForegroundPermissionsAsync();
            if (status !== 'granted') {
                setStatus('Permission to access location was denied');
                return;
            } else {
                console.log('Access granted!!')
                setStatus(status)
            }

        })();
    }, []);


};

export default App;
const styles = StyleSheet.create({
    container: {
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center',
    },
    paragraph: {
        fontSize: 16,
        textAlign: 'center',
    },
});



/// code for grabbing current location
import { StatusBar } from 'expo-status-bar';
import React from 'react';
import { Text, TextInput, Pressable, View, Alert } from 'react-native';
import * as Location from "expo-location";

export default class Grabber extends React.Component {

    state = {
        errorMessage: "",
        location: {}
    }

    getAddress() {
        return this.state.address
    }

    _getLocation = async () => {
        const { status } = await Location.requestForegroundPermissionsAsync();
        if (status !== "granted") {
            console.log("PERMISSION LACK!")
            this.setState({
                errorMessage: "PERMISSION NOT GRANTED"
            });
        }
        console.log("there")
        const userLocation = await Location.getCurrentPositionAsync();
        console.log("here")
        console.log(JSON.stringify(userLocation))
        this.setState({
            location: userLocation
        })
    }

    render() {
        this._getLocation()

        return (
            <View>
                <Text>Salut</Text>
            </View>
        );
    }
}


